<UserControl x:Class="JPSoftworks.EditorBar.Controls.GeneralOptionsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="clr-namespace:JPSoftworks.EditorBar.Controls"
             xmlns:shell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=controls:GeneralOptionsControl, IsDesignTimeCreatable=False}"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="GroupBox">
            <Setter Property="Margin" Value="0,0,0,12" />
            <Setter Property="Padding" Value="4" />
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="2" />
        </Style>
        <Style x:Key="HintTextBlockStyle" TargetType="TextBlock">
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="FontSize" Value="{DynamicResource {x:Static shell:VsFonts.Environment90PercentFontSizeKey}}" />
            <Setter Property="Foreground" Value="{x:Static SystemColors.GrayTextBrush}" />
        </Style>
    </UserControl.Resources>
    <ScrollViewer>
        <StackPanel>

            <GroupBox Header="Editor Bar">
                <StackPanel>
                    <CheckBox Content="_Enabled" IsChecked="{Binding ViewModel.IsEnabled}" />
                    <TextBlock Margin="20,4,0,0" Style="{StaticResource HintTextBlockStyle}">
                        You can toggle Editor Bar using a menu command <Run FontWeight="SemiBold">View / Editor Bar</Run> or assign a keyboard shortcut to toggle Editor Bar on and off using <Hyperlink Click="CustomizeKeyboardHyperlink_OnClick">Environment -> Keyboard</Hyperlink> options.
                    </TextBlock>
                </StackPanel>
            </GroupBox>

            <GroupBox Header="Appearance">

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="160" />
                        <ColumnDefinition Width="Auto" MinWidth="240" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Content="_Position:" Target="{x:Reference BarPositionComboBox}" />
                    <ComboBox x:Name="BarPositionComboBox" Grid.Column="1" Grid.Row="0" ItemsSource="{Binding ViewModel.BarPositions}" SelectedValue="{Binding ViewModel.BarPosition, Mode=TwoWay}" SelectedValuePath="Value" DisplayMemberPath="DisplayName" />

                    <Label Grid.Column="0" Grid.Row="1" Content="Display _mode:" Target="{x:Reference DisplayModeComboBox}" />
                    <ComboBox x:Name="DisplayModeComboBox" Grid.Column="1" Grid.Row="1" ItemsSource="{Binding ViewModel.DisplayStyles}" SelectedValue="{Binding ViewModel.DisplayStyle, Mode=TwoWay}" SelectedValuePath="Value" DisplayMemberPath="DisplayName" />

                    <Label Grid.Column="0" Grid.Row="2" Content="Pat_h display:" Target="{x:Reference PathStyleComboBox}" />
                    <ComboBox x:Name="PathStyleComboBox" Grid.Column="1" Grid.Row="2" ItemsSource="{Binding ViewModel.PathStyles}" SelectedValue="{Binding ViewModel.ShowRelativePath, Mode=TwoWay}" SelectedValuePath="Value" DisplayMemberPath="DisplayName" />
                </Grid>
            </GroupBox>

            <GroupBox Header="Bar Elements">
                <StackPanel Grid.IsSharedSizeScope="True">
                    <controls:ColorSelector LabelContent="_Solution root" IsChecked="{Binding ViewModel.SolutionRootSegment.IsVisible}" ForegroundColor="{Binding ViewModel.SolutionRootSegment.ForegroundColor}" BackgroundColor="{Binding ViewModel.SolutionRootSegment.BackgroundColor}" />
                    <controls:ColorSelector LabelContent="Solution _folders" IsChecked="{Binding ViewModel.SolutionFolderSegment.IsVisible}" ForegroundColor="{Binding ViewModel.SolutionFolderSegment.ForegroundColor}" BackgroundColor="{Binding ViewModel.SolutionFolderSegment.BackgroundColor}" />
                    <controls:ColorSelector LabelContent="P_roject" IsCheckable="False" ForegroundColor="{Binding ViewModel.ProjectNameSegment.ForegroundColor}" BackgroundColor="{Binding ViewModel.ProjectNameSegment.BackgroundColor}" />
                </StackPanel>
            </GroupBox>

            <GroupBox Header="Quick Actions">

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="160" />
                        <ColumnDefinition Width="Auto" MinWidth="240" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Content="_Double-click:" Target="{x:Reference DoubleClickActionComboBox}" />
                    <ComboBox x:Name="DoubleClickActionComboBox" Grid.Column="1" Grid.Row="0" ItemsSource="{Binding ViewModel.DoubleClickActions}" SelectedValue="{Binding ViewModel.DoubleClickAction, Mode=TwoWay}" SelectedValuePath="Value" DisplayMemberPath="DisplayName" />

                    <Label Grid.Column="0" Grid.Row="1" Content="_Ctrl + Double-click:" Target="{x:Reference DoubleClickCtrlActionComboBox}"/>
                    <ComboBox x:Name="DoubleClickCtrlActionComboBox" Grid.Column="1" Grid.Row="1" ItemsSource="{Binding ViewModel.DoubleClickActions}" SelectedValue="{Binding ViewModel.DoubleClickCtrlAction, Mode=TwoWay}" SelectedValuePath="Value" DisplayMemberPath="DisplayName" />
                </Grid>
            </GroupBox>

            <GroupBox Header="External Editor">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="160" />
                        <ColumnDefinition Width="Auto" MinWidth="240" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Content="_Editor path:" Target="{x:Reference ExternalEditorPathTextBox}" />
                    <DockPanel Grid.Column="1" Grid.Row="0">
                        <Button MinWidth="24" DockPanel.Dock="Right" Content="..." Command="{Binding ViewModel.BrowseForExternalEditorCommand}" VerticalAlignment="Center" MinHeight="{Binding ActualHeight, ElementName=ExternalEditorPathTextBox}" Margin="4,0,0,0" />
                        <TextBox x:Name="ExternalEditorPathTextBox" Text="{Binding ViewModel.ExternalEditorPath}" VerticalAlignment="Center" />
                    </DockPanel>

                    <Label Grid.Column="0" Grid.Row="1" Content="Editor _arguments:" Target="{x:Reference ExternalEditorArgumentsTextBox}" />
                    <TextBox x:Name="ExternalEditorArgumentsTextBox" Grid.Column="1" Grid.Row="1" Text="{Binding ViewModel.ExternalEditorArguments}" VerticalAlignment="Center" />

                    <TextBlock Style="{StaticResource HintTextBlockStyle}" Grid.Column="1" Grid.Row="2" MaxWidth="240">Use $(FileName) as placeholder for name of the current file.</TextBlock>
                </Grid>
            </GroupBox>
        </StackPanel>
    </ScrollViewer>
</UserControl>
